# name: dev_CI

# on:

#   workflow_dispatch:

#   pull_request:
#     types:
#       - opened
#       - synchronize
#     branches:
#       - main
#     paths:
#       - "**/*.py"
#       - "**/*.yml"

# jobs:
#   test:
#     name: "Run tests"
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Set up python_wheel_task
#         uses: actions/setup-python@v4
#         with:
#           python-version: '3.x'

#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install pytest setuptools
#       - name: Run tests
#         run: |
#           pytest tests/main_test.py --environment dev

name: dev_CI

on:
  pull_request:
    branches:
      - main # Run CI on pull requests to the main branch

jobs:
  # CI Job: Runs tests
  test:
    name: "Run tests"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest setuptools

      - name: Run tests
        run: |
          pytest tests/main_test.py --environment dev
        env:
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}

  # CD Job: Deploy and run pipeline update if CI passes
  deploy_and_update:
    name: "Deploy and Pipeline Update"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Databricks CLI
        uses: databricks/setup-cli@main

      # Deploy the bundle
      - name: Deploy bundle
        run: databricks bundle deploy
        env:
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
          DATABRICKS_BUNDLE_ENV: dev

      # Run pipeline update after deployment
      - name: Run pipeline update
        run: |
          set -o pipefail
          databricks bundle run test_dabs_job --refresh-all 2>&1 | tee output.log
        env:
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
          DATABRICKS_BUNDLE_ENV: dev
